{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","classNames","completed","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","todoList","setTodoList","setUserId","setTitle","isTitle","setIsTitle","isUser","setIsUser","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c30f7d3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user?.email}`}\n    data-id={user?.id}\n  >\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { id, title, user } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import { useState, FormEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n\n  const maxId = () => {\n    return Math.max(...todoList.map(todo => todo.id)) + 1;\n  };\n\n  const addTodo = () => {\n    const newTodo = {\n      id: maxId(),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodoList(currentTodos => {\n      return [...currentTodos, newTodo];\n    });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    if (!title.length) {\n      setIsTitle(true);\n    }\n\n    if (userId === 0) {\n      setIsUser(true);\n    }\n\n    if (title.length > 0 && userId > 0) {\n      addTodo();\n      setTitle('');\n      setUserId(0);\n      setIsTitle(false);\n      setIsUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter the title\"\n            value={title}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setTitle(value);\n            }}\n          />\n          {isTitle && !title.length && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setUserId(+value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>))}\n          </select>\n\n          {(isUser && userId === 0)\n             && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}